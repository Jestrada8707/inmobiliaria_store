# Generated by Django 4.0.7 on 2022-11-04 21:21

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0069_log_entry_jsonfield'),
        ('wagtailimages', '0024_index_image_file_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='RequisitosVenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requerimiento_venta', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='requerimiento_venta')),
            ],
            options={
                'verbose_name_plural': 'Requisitos Venta',
                'ordering': ['requerimiento_venta'],
            },
        ),
        migrations.CreateModel(
            name='ImageCarousel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('titulo_imagen', models.CharField(blank=True, help_text='Su texto no puede superar los 30 caracteres', max_length=30, null=True)),
                ('url_link', models.URLField(blank=True, help_text='Pegue aquí la URL del sitio web,límite de 500 caracteres', max_length=500)),
                ('abrir_nueva_ventana', models.BooleanField(blank=True, default=False, help_text='Active esta opción si desea que el link abra desde una ventana nueva')),
                ('imagenes_carousel', models.ForeignKey(help_text='La imagen optima es de 1000px X 1000px', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('internal_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.page')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='banner_image', to='home.homepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BannerPrincipal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('titulo_principal', models.CharField(help_text='Titulo principal banner, no puede superar los 45 caracteres', max_length=45)),
                ('texto_principal', models.CharField(blank=True, help_text='Texto adicional, se puede usar para dar más información,no puede superar los 130 caracteres', max_length=130, null=True)),
                ('titulo_boton', models.CharField(blank=True, help_text='El título del botón no puede ser mayor a 30 caracteres', max_length=30, null=True)),
                ('url_link', models.URLField(blank=True, help_text='Pegue aquí la URL del sitio web,límite de 500 caracteres', max_length=500)),
                ('abrir_nueva_ventana', models.BooleanField(blank=True, default=False, help_text='Active esta opción si desea que el link abra desde una ventana nueva')),
                ('internal_link', models.ForeignKey(blank=True, help_text='Selecciona una página de tu sitio para compartir en este botón', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.page')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_banner', to='home.homepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BanerVenta',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('titulo_banner', models.CharField(blank=True, help_text='Su texto no puede superar los 70 caracteres', max_length=70, null=True)),
                ('texto_banner', wagtail.fields.RichTextField(blank=True, help_text='Escriba aquí el texto, máximo 550 caracteres', max_length=550)),
                ('titulo_boton', models.CharField(blank=True, help_text='Su texto no puede superar los 30 caracteres', max_length=30, null=True)),
                ('url_link', models.URLField(blank=True, help_text='Pegue aquí la URL del sitio web,límite de 500 caracteres', max_length=500)),
                ('abrir_nueva_ventana', models.BooleanField(blank=True, default=False, help_text='Active esta opción si desea que el link abra desde una ventana nueva')),
                ('imagen_banner', models.ForeignKey(help_text='La imagen optima es de 1000px X 1000px', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('internal_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.page')),
                ('requisitos', modelcluster.fields.ParentalManyToManyField(blank=True, to='home.requisitosventa')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
